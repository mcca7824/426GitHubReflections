How did viewing a diff between two versions of a file help you see the bug that
was introduced?



Compare line by line how the code differed.



How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Easier to find + revert mistakes.





What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?



Store changes that are complete + make sense.



Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Keep a working directory of code together. Code usually involves multiple files, while word processing is just one.



How can you use the commands git log and git diff to view the history of files?

 

See previous revisions and the changes made between the commits.



How might using version control make you more confident to make changes that
could break something?

 

Easy to revert and find issues.



Now that you have your workspace set up, what do you want to try using Git for?


Code orgainzation